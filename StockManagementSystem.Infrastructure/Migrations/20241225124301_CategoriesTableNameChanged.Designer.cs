// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockManagementSystem.Infrastructure;

#nullable disable

namespace StockManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241225124301_CategoriesTableNameChanged")]
    partial class CategoriesTableNameChanged
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockManagementSystem.DomainModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.PartyAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PartyAddress");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.Product", b =>
                {
                    b.Property<int>("productID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productID"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductsCategorycategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StockTransactiontransactionId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("productCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("supplierId")
                        .HasColumnType("int");

                    b.HasKey("productID");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductsCategorycategoryId");

                    b.HasIndex("StockTransactiontransactionId");

                    b.HasIndex("supplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            productID = -8,
                            Price = 10.99m,
                            Quantity = 100m,
                            UnitPrice = 10.99m,
                            productCategory = " Electronics",
                            productCategoryID = 0,
                            productCategoryName = "",
                            productDescription = "Description for Random Product 1",
                            productName = "Random Product 1"
                        },
                        new
                        {
                            productID = -9,
                            Price = 10.99m,
                            Quantity = 100m,
                            UnitPrice = 10.99m,
                            productCategory = " Electronics",
                            productCategoryID = 0,
                            productCategoryName = "",
                            productDescription = "Description for Random Product 1",
                            productName = "Random Product 1"
                        },
                        new
                        {
                            productID = -10,
                            Price = 10.99m,
                            Quantity = 100m,
                            UnitPrice = 10.99m,
                            productCategory = " Electronics",
                            productCategoryID = 0,
                            productCategoryName = "",
                            productDescription = "Description for Random Product 1",
                            productName = "Random Product 1"
                        },
                        new
                        {
                            productID = -11,
                            Price = 10.99m,
                            Quantity = 100m,
                            UnitPrice = 10.99m,
                            productCategory = " Electronics",
                            productCategoryID = 0,
                            productCategoryName = "",
                            productDescription = "Description for Random Product 1",
                            productName = "Random Product 1"
                        });
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.ProductsCategory", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.StockTransaction", b =>
                {
                    b.Property<int>("transactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transactionId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("transactionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("transactionNumber")
                        .HasColumnType("int");

                    b.Property<string>("transactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("transactionId");

                    b.HasIndex("CustomerId");

                    b.ToTable("StockTransactions");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.Supplier", b =>
                {
                    b.Property<int>("supplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplierId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("supplierId");

                    b.HasIndex("AddressId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("StockManagementSystem.Infrastructure.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.Customer", b =>
                {
                    b.HasOne("StockManagementSystem.DomainModels.PartyAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.Product", b =>
                {
                    b.HasOne("StockManagementSystem.DomainModels.Customer", null)
                        .WithMany("FrequentlyPurchaseList")
                        .HasForeignKey("CustomerId");

                    b.HasOne("StockManagementSystem.DomainModels.ProductsCategory", null)
                        .WithMany("ProductsList")
                        .HasForeignKey("ProductsCategorycategoryId");

                    b.HasOne("StockManagementSystem.DomainModels.StockTransaction", null)
                        .WithMany("Items")
                        .HasForeignKey("StockTransactiontransactionId");

                    b.HasOne("StockManagementSystem.DomainModels.Supplier", null)
                        .WithMany("suppliesProducts")
                        .HasForeignKey("supplierId");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.StockTransaction", b =>
                {
                    b.HasOne("StockManagementSystem.DomainModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.Supplier", b =>
                {
                    b.HasOne("StockManagementSystem.DomainModels.PartyAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.Customer", b =>
                {
                    b.Navigation("FrequentlyPurchaseList");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.ProductsCategory", b =>
                {
                    b.Navigation("ProductsList");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.StockTransaction", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("StockManagementSystem.DomainModels.Supplier", b =>
                {
                    b.Navigation("suppliesProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
